@model IEnumerable<EasyGames.Controllers.AdminUsersController.UserRow>
@{
    ViewData["Title"] = "User Management Dashboard";
    var allRoles = (List<string>)ViewBag.AllRoles ?? new();
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2 class="fw-bold text-dark mb-0">ðŸ‘¥ User Management</h2>
        <small class="text-muted">Manage user roles, tiers, and account privileges</small>
    </div>
    <a class="btn btn-success rounded-pill px-3 shadow-sm">
        <i class="bi bi-person-plus me-1"></i> Add New User
    </a>
</div>

@if (TempData["msg"] is string m)
{
    <div class="alert alert-success alert-dismissible fade show shadow-sm" role="alert">
        <i class="bi bi-check-circle me-2"></i>@m
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="card shadow-sm border-0 glass-card">
    <div class="card-header bg-light fw-semibold">Registered Users</div>

    <div class="table-responsive">
        <table class="table align-middle mb-0">
            <thead class="table-light">
                <tr>
                    <th>Email</th>
                    <th>Name</th>
                    <th>Tier</th>
                    <th class="text-end">Lifetime Profit</th>
                    <th>Roles</th>
                    <th class="text-end">Actions</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var u in Model)
            {
                <tr>
                    <td>@u.Email</td>
                    <td>@(string.IsNullOrEmpty(u.FullName) ? "-" : u.FullName)</td>

                    <!-- Tier badge -->
                    <td>
                        @{
                            string tierClass = u.Tier switch
                            {
                                "Platinum" => "tier platinum",
                                "Gold" => "tier gold",
                                "Silver" => "tier silver",
                                _ => "tier bronze"
                            };
                        }
                        <span class="@tierClass">
                            <i class="bi bi-award me-1"></i>@u.Tier
                        </span>
                    </td>

                    <td class="text-end fw-semibold">@u.LifetimeProfitContribution.ToString("C")</td>

                    <!-- Roles -->
                    <td>
                        @foreach (var role in (u.Roles ?? "").Split(',', StringSplitOptions.RemoveEmptyEntries))
                        {
                            <span class="badge rounded-pill me-1 @(role.Trim() == "Owner" ? "bg-danger" :
                                                                role.Trim() == "Staff" ? "bg-info text-dark" :
                                                                "bg-success")">
                                @role.Trim()
                            </span>
                        }
                    </td>

                    <!-- Action buttons -->
                    <td class="text-end">
                        <div class="d-flex justify-content-end gap-2">
                            <form method="post" asp-action="AddRole" asp-controller="AdminUsers" class="d-inline-flex align-items-center gap-2">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="userId" value="@u.Id" />
                                <select name="role" class="form-select form-select-sm w-auto rounded-pill shadow-sm">
                                    @foreach (var r in allRoles)
                                    {
                                        <option>@r</option>
                                    }
                                </select>
                                <button class="btn btn-sm btn-outline-primary rounded-circle" title="Add Role">
                                    <i class="bi bi-plus-lg"></i>
                                </button>
                            </form>

                            <form method="post" asp-action="RemoveRole" asp-controller="AdminUsers" class="d-inline">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="userId" value="@u.Id" />
                                <input type="hidden" name="role" value="@EasyGames.Data.Seed.OwnerRole" />
                                <button class="btn btn-sm btn-outline-warning rounded-circle" title="Remove Owner">
                                    <i class="bi bi-x-lg"></i>
                                </button>
                            </form>

                            <button class="btn btn-sm btn-outline-danger rounded-circle"
                                    title="Delete User"
                                    data-bs-toggle="modal"
                                    data-bs-target="#deleteUserModal"
                                    data-user-id="@u.Id"
                                    data-user-name="@u.FullName">
                                <i class="bi bi-trash3"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content border-0 shadow-lg rounded-4">
      <div class="modal-header bg-danger text-white rounded-top-4">
        <h5 class="modal-title"><i class="bi bi-exclamation-triangle-fill me-2"></i>Confirm Delete</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body text-center py-4">
        <i class="bi bi-person-x display-5 text-danger mb-3"></i>
        <p class="fs-6">Are you sure you want to delete <strong id="deleteUserName"></strong>?</p>
        <p class="text-muted small mb-0">This action cannot be undone.</p>
      </div>
      <div class="modal-footer justify-content-center border-0 pb-4">
        <form id="deleteUserForm" method="post" asp-action="Delete" asp-controller="AdminUsers">
          @Html.AntiForgeryToken()
          <input type="hidden" name="userId" id="deleteUserId" />
          <button type="button" class="btn btn-outline-secondary rounded-pill px-4" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-danger rounded-pill px-4">
            <i class="bi bi-trash3-fill me-1"></i> Delete
          </button>
        </form>
      </div>
    </div>
  </div>
</div>

@section Scripts {
<script>
document.addEventListener("DOMContentLoaded", () => {
  const modal = document.getElementById('deleteUserModal');
  modal.addEventListener('show.bs.modal', event => {
    const btn = event.relatedTarget;
    const id = btn.getAttribute('data-user-id');
    const name = btn.getAttribute('data-user-name');
    document.getElementById('deleteUserId').value = id;
    document.getElementById('deleteUserName').textContent = name || 'this user';
  });
});
</script>

<style>
/* Clean glass look */
.glass-card {
    background: rgba(255, 255, 255, 0.85);
    backdrop-filter: blur(12px);
    border-radius: 1rem;
}

/* Tier Styles */
.tier {
    display: inline-flex;
    align-items: center;
    gap: 0.3rem;
    padding: 0.3rem 0.75rem;
    border-radius: 999px;
    font-size: 0.85rem;
    font-weight: 600;
}
.tier.bronze {
    background: linear-gradient(145deg, #cd7f32, #a66e2d);
    color: #fff;
}
.tier.silver {
    background: linear-gradient(145deg, #bfc1c2, #7e7e7e);
    color: #fff;
}
.tier.gold {
    background: linear-gradient(145deg, #ffd700, #d4af37);
    color: #000;
}
.tier.platinum {
    background: linear-gradient(145deg, #e5e4e2, #b8b8b8);
    color: #000;
}
</style>
}
