@model IEnumerable<EasyGames.Models.StockItem>
@{
    ViewData["Title"] = "Catalog";

    // i read optional UI state from ViewBag so i don't force controller changes
    string category = (ViewBag.Category as string) ?? "";
    string q        = (ViewBag.Q as string) ?? "";
    string sort     = (ViewBag.Sort as string) ?? "name";

    int pageIndex   = ViewBag.PageIndex is int p ? p : 1;   // i default page index = 1
    int totalPages  = ViewBag.TotalPages is int t ? t : 1;  // i default total pages = 1
}

<!-- hero header: i fixed the ?? "Welcome" bug and styled it -->
<div class="py-5 text-center bg-light rounded-3 mb-4 shadow-sm">
  <h1 class="display-5 fw-bold text-dark m-0">Catalog</h1>
  <p class="text-secondary mb-0">Great games, books &amp; toys — fast.</p>
</div>

<!-- i added a lightweight toolbar: category filter + search + sort -->
<form method="get" class="card shadow-sm border-0 mb-4">
  <div class="card-body">
    <div class="row g-2 align-items-end">
      <div class="col-md-3">
        <label class="form-label">Category</label>
        <select name="category" class="form-select">
          <option value="" selected="@string.IsNullOrEmpty(category)">All</option>
          <option value="Book" selected="@(category=="Book")">Book</option>
          <option value="Game" selected="@(category=="Game")">Game</option>
          <option value="Toy"  selected="@(category=="Toy")">Toy</option>
        </select>
      </div>

      <div class="col-md-5">
        <label class="form-label">Search</label>
        <input name="q" value="@q" class="form-control" placeholder="Search name, category..." />
      </div>

      <div class="col-md-2">
        <label class="form-label">Sort</label>
        <select name="sort" class="form-select">
          <option value="name"     selected="@(sort=="name")">Name (A–Z)</option>
          <option value="price"    selected="@(sort=="price")">Price (Low → High)</option>
          <option value="price_d"  selected="@(sort=="price_d")">Price (High → Low)</option>
          <option value="category" selected="@(sort=="category")">Category</option>
        </select>
      </div>

      <div class="col-md-2">
        <button class="btn btn-primary w-100">Apply</button> <!-- i kept it simple with a single submit -->
      </div>
    </div>
  </div>
</form>

@if (!Model.Any())
{
    <!-- i added a friendly empty state -->
    <div class="text-center py-5 bg-white rounded-3 shadow-sm">
      <div class="display-6 mb-2">No products found</div>
      <p class="text-muted mb-4">Try clearing filters or searching something else.</p>
      <a class="btn btn-outline-primary" href="/Catalog">Reset filters</a>
    </div>
}
else
{
    <!-- i built a responsive grid of product cards with graceful image fallbacks -->
    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-4">
    @foreach (var s in Model)
    {
        <div class="col">
          <div class="card h-100 product-card shadow-sm border-0">
            @if (!string.IsNullOrWhiteSpace(s.ImagePath))
            {
                <!-- i show the product image if ImagePath is set -->
                <img src="@s.ImagePath" class="card-img-top product-img" alt="@s.Name" />
            }
            else
            {
                <!-- i added a tasteful fallback image so the grid never looks broken -->
                <img src="https://picsum.photos/600/400?blur=1" class="card-img-top product-img" alt="@s.Name" />
            }

            <div class="card-body d-flex flex-column">
              <!-- i clamp long titles to one line for even cards -->
              <h5 class="card-title text-truncate mb-1">@s.Name</h5>

              <!-- i show the category as a badge -->
              <p class="mb-2"><span class="badge text-bg-secondary">@s.Category</span></p>

              <!-- i push price/add-to-cart to the bottom using mt-auto -->
              <div class="mt-auto d-flex justify-content-between align-items-center">
                <div class="price-tag">@s.Price.ToString("C")</div>
                <form asp-controller="Cart" asp-action="Add" method="post" class="ms-2">
                  @Html.AntiForgeryToken() <!-- i added CSRF protection -->
                  <input type="hidden" name="id" value="@s.Id" />
                  <button class="btn btn-primary btn-sm">Add to Cart</button>
                </form>
              </div>
            </div>

            <div class="card-footer bg-transparent border-0">
              <a class="btn btn-outline-info btn-sm w-100" asp-action="Details" asp-route-id="@s.Id">Details</a>
            </div>
          </div>
        </div>
    }
    </div>

    @* i render a pager only if there are multiple pages *@
    @if (totalPages > 1)
    {
        <nav class="mt-4">
          <ul class="pagination pagination-sm justify-content-center">
            <li class="page-item @(pageIndex > 1 ? "" : "disabled")">
              <a class="page-link" href="@Url.Action("Index", new { page = pageIndex - 1, sort, category, q })">Prev</a>
            </li>
            @for (int i = 1; i <= totalPages; i++)
            {
              <li class="page-item @(i == pageIndex ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = i, sort, category, q })">@i</a>
              </li>
            }
            <li class="page-item @(pageIndex < totalPages ? "" : "disabled")">
              <a class="page-link" href="@Url.Action("Index", new { page = pageIndex + 1, sort, category, q })">Next</a>
            </li>
          </ul>
        </nav>
    }
}
